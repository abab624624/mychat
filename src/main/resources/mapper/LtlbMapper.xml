<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.zufe.mychat.dao.LtlbMapper">
  <resultMap id="BaseResultMap" type="com.zufe.mychat.bean.Ltlb">
    <id column="ltlb_id" jdbcType="INTEGER" property="ltlbId" />
    <result column="sj" jdbcType="TIMESTAMP" property="sj" />
    <result column="username" jdbcType="VARCHAR" property="username" />
    <result column="content" jdbcType="VARCHAR" property="content" />
    <result column="touser" jdbcType="VARCHAR" property="touser" />
    <result column="myread" jdbcType="TINYINT" property="myread" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    ltlb_id, sj, username, content, touser, myread
  </sql>
  <select id="selectByExample" parameterType="com.zufe.mychat.bean.LtlbExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from ltlb
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from ltlb
    where ltlb_id = #{ltlbId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from ltlb
    where ltlb_id = #{ltlbId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.zufe.mychat.bean.LtlbExample">
    delete from ltlb
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.zufe.mychat.bean.Ltlb">
    insert into ltlb (ltlb_id, sj, username, 
      content, touser, myread
      )
    values (#{ltlbId,jdbcType=INTEGER}, #{sj,jdbcType=TIMESTAMP}, #{username,jdbcType=VARCHAR}, 
      #{content,jdbcType=VARCHAR}, #{touser,jdbcType=VARCHAR}, #{myread,jdbcType=TINYINT}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.zufe.mychat.bean.Ltlb">
    insert into ltlb
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="ltlbId != null">
        ltlb_id,
      </if>
      <if test="sj != null">
        sj,
      </if>
      <if test="username != null">
        username,
      </if>
      <if test="content != null">
        content,
      </if>
      <if test="touser != null">
        touser,
      </if>
      <if test="myread != null">
        myread,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="ltlbId != null">
        #{ltlbId,jdbcType=INTEGER},
      </if>
      <if test="sj != null">
        #{sj,jdbcType=TIMESTAMP},
      </if>
      <if test="username != null">
        #{username,jdbcType=VARCHAR},
      </if>
      <if test="content != null">
        #{content,jdbcType=VARCHAR},
      </if>
      <if test="touser != null">
        #{touser,jdbcType=VARCHAR},
      </if>
      <if test="myread != null">
        #{myread,jdbcType=TINYINT},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.zufe.mychat.bean.LtlbExample" resultType="java.lang.Long">
    select count(*) from ltlb
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  
    <select id="selectContentOrderByTime"  parameterType="java.lang.String"  resultMap="BaseResultMap">
select * from ltlb where( username=#{0} and touser=#{1}) or (username=#{1} and touser=#{0})order by sj
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update ltlb
    <set>
      <if test="record.ltlbId != null">
        ltlb_id = #{record.ltlbId,jdbcType=INTEGER},
      </if>
      <if test="record.sj != null">
        sj = #{record.sj,jdbcType=TIMESTAMP},
      </if>
      <if test="record.username != null">
        username = #{record.username,jdbcType=VARCHAR},
      </if>
      <if test="record.content != null">
        content = #{record.content,jdbcType=VARCHAR},
      </if>
      <if test="record.touser != null">
        touser = #{record.touser,jdbcType=VARCHAR},
      </if>
      <if test="record.myread != null">
        myread = #{record.myread,jdbcType=TINYINT},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update ltlb
    set ltlb_id = #{record.ltlbId,jdbcType=INTEGER},
      sj = #{record.sj,jdbcType=TIMESTAMP},
      username = #{record.username,jdbcType=VARCHAR},
      content = #{record.content,jdbcType=VARCHAR},
      touser = #{record.touser,jdbcType=VARCHAR},
      myread = #{record.myread,jdbcType=TINYINT}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.zufe.mychat.bean.Ltlb">
    update ltlb
    <set>
      <if test="sj != null">
        sj = #{sj,jdbcType=TIMESTAMP},
      </if>
      <if test="username != null">
        username = #{username,jdbcType=VARCHAR},
      </if>
      <if test="content != null">
        content = #{content,jdbcType=VARCHAR},
      </if>
      <if test="touser != null">
        touser = #{touser,jdbcType=VARCHAR},
      </if>
      <if test="myread != null">
        myread = #{myread,jdbcType=TINYINT},
      </if>
    </set>
    where ltlb_id = #{ltlbId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.zufe.mychat.bean.Ltlb">
    update ltlb
    set sj = #{sj,jdbcType=TIMESTAMP},
      username = #{username,jdbcType=VARCHAR},
      content = #{content,jdbcType=VARCHAR},
      touser = #{touser,jdbcType=VARCHAR},
      myread = #{myread,jdbcType=TINYINT}
    where ltlb_id = #{ltlbId,jdbcType=INTEGER}
  </update>
</mapper>