<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.zufe.mychat.dao.FriendsMapper">
  <resultMap id="BaseResultMap" type="com.zufe.mychat.bean.Friends">
    <id column="user1" jdbcType="VARCHAR" property="user1" />
    <id column="user2" jdbcType="VARCHAR" property="user2" />
    <result column="friends_id" jdbcType="VARCHAR" property="friendsId" />
  </resultMap>
  
   <resultMap id="WithStatusResultMap" type="com.zufe.mychat.bean.Friends" >
  	 
  	 
     <id column="user1" jdbcType="VARCHAR" property="user1" />
   	 <id column="user2" jdbcType="VARCHAR" property="user2" />
   
   	 <!-- 指定联合查询 -->
   	 <association property="users" javaType="com.zufe.mychat.bean.Users">
   	 	<id column="users_id" jdbcType="INTEGER" property="usersId" />
   	 	<result column="satus" jdbcType="VARCHAR" property="satus" />
   	 </association>
   	 
   	  <!-- 指定联合查询 -->
   	 <association property="chat_notification" javaType="com.zufe.mychat.bean.Chat_notification">
   	 	<id column="Id" jdbcType="INTEGER" property="id" />
   	 	<result column="count" jdbcType="VARCHAR" property="count" />
   	 </association>
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    user1, user2, friends_id
  </sql>
  <sql id="withStatus_Column_List">
  f.user1,f.user2,u.satus,c.count
  </sql>
  <select id="selectByExample" parameterType="com.zufe.mychat.bean.FriendsExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from friends
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectFriendsWithStatus"  parameterType="java.lang.String"  resultMap="WithStatusResultMap">
  	 select 
     <include refid="withStatus_Column_List" />
     from friends f,users u ,chat_notification c where (f.user1=u.username or f.user2=u.username) and u.username!=#{usernamex,jdbcType=VARCHAR} and ((f.user1=#{usernamex,jdbcType=VARCHAR} and f.user2=c.sender )or (f.user1=c.sender and f.user2=#{usernamex,jdbcType=VARCHAR}))
     and c.receiver=#{usernamex,jdbcType=VARCHAR}
  </select>	
  
  <select id="selectByPrimaryKey" parameterType="com.zufe.mychat.bean.FriendsKey" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from friends
    where user1 = #{user1,jdbcType=VARCHAR}
      and user2 = #{user2,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="com.zufe.mychat.bean.FriendsKey">
    delete from friends
    where user1 = #{user1,jdbcType=VARCHAR}
      and user2 = #{user2,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.zufe.mychat.bean.FriendsExample">
    delete from friends
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.zufe.mychat.bean.Friends">
    insert into friends (user1, user2, friends_id
      )
    values (#{user1,jdbcType=VARCHAR}, #{user2,jdbcType=VARCHAR}, #{friendsId,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.zufe.mychat.bean.Friends">
    insert into friends
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="user1 != null">
        user1,
      </if>
      <if test="user2 != null">
        user2,
      </if>
      <if test="friendsId != null">
        friends_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="user1 != null">
        #{user1,jdbcType=VARCHAR},
      </if>
      <if test="user2 != null">
        #{user2,jdbcType=VARCHAR},
      </if>
      <if test="friendsId != null">
        #{friendsId,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.zufe.mychat.bean.FriendsExample" resultType="java.lang.Long">
    select count(*) from friends
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update friends
    <set>
      <if test="record.user1 != null">
        user1 = #{record.user1,jdbcType=VARCHAR},
      </if>
      <if test="record.user2 != null">
        user2 = #{record.user2,jdbcType=VARCHAR},
      </if>
      <if test="record.friendsId != null">
        friends_id = #{record.friendsId,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update friends
    set user1 = #{record.user1,jdbcType=VARCHAR},
      user2 = #{record.user2,jdbcType=VARCHAR},
      friends_id = #{record.friendsId,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.zufe.mychat.bean.Friends">
    update friends
    <set>
      <if test="friendsId != null">
        friends_id = #{friendsId,jdbcType=VARCHAR},
      </if>
    </set>
    where user1 = #{user1,jdbcType=VARCHAR}
      and user2 = #{user2,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.zufe.mychat.bean.Friends">
    update friends
    set friends_id = #{friendsId,jdbcType=VARCHAR}
    where user1 = #{user1,jdbcType=VARCHAR}
      and user2 = #{user2,jdbcType=VARCHAR}
  </update>
</mapper>